CREATE OR REPLACE procedure I_SYN_TT_CAR_QUEUE_M(i_QueueCode      IN VARCHAR2,
                                                 i_QueueName      IN VARCHAR2,
                                                 i_CacheQueueCode IN VARCHAR2,
                                                 i_CacheQueueName IN VARCHAR2,
                                                 i_CacheQTY       IN INTEGER,
																								 i_Flag					  IN VARCHAR2,
                                                 o_success        OUT INTEGER,
                                                 o_msg            OUT VARCHAR2) is

  v_COUNT        INTEGER;
  v_WAREHOUSE_ID VARCHAR2(64) := '1316220086721318914';
  v_msg          VARCHAR2(2000);
  v_log_text     CLOB;
  v_log_no       VARCHAR2(64);
  e_USEREXCEPTION EXCEPTION;
begin
  v_log_no   := TO_CHAR(SYSDATE, 'yyyyMMddhh24miss');
  v_msg      := '开始同步TT队列主数据';
  v_log_text := ',i_QueueCode:' || i_QueueCode || ',i_QueueName:' ||
                i_QueueName || ',i_CacheQueueCode:' || i_CacheQueueCode ||
                ',i_CacheQueueName:' || i_CacheQueueName || ',i_CacheQTY:' ||
                i_CacheQTY;

  m_add_log(i_warehouse_id   => v_WAREHOUSE_ID,
            i_log_text       => '同步TT队列主数据',
            i_log_text_long  => v_msg || v_log_text,
            i_common_name    => 'I_SYN_TT_CAR_QUEUE_M',
            i_critical_level => 0,
            i_type_code      => 'workflow_log',
            i_log_no         => v_log_no,
            i_parrent_log_no => '',
            i_user           => 'WMS');
						
	--添加
	IF i_Flag = 'A' THEN
	  IF i_QueueCode IS NOT NULL THEN
     insert into wms_m_tt_car_queue
        (t_id,
         client_id,
         org_id,
         warehouse_id,
         queue_code,
         queue_name,
         is_cache,
         cache_qty,
         create_date,
         created_by,
         modify_ip,
         modify_date,
         last_modified_by,
         act_status)
      values
        (GETNTIID(),
         '',
         '',
         v_WAREHOUSE_ID,
         i_QueueCode,
         i_QueueName,
         0,
         0,
         SYSDATE,
         'WMS',
         '',
         '',
         '',
         '1'); 
		END IF; 
		
	--CacheQueue		
	IF i_CacheQueueCode IS NOT NULL THEN
	 
	SELECT
		COUNT(*) INTO v_COUNT 
	FROM
		wms_m_tt_car_queue que 
	WHERE
		que.QUEUE_CODE = i_CacheQueueCode;
		
	 IF v_COUNT = 0 THEN
	 insert into wms_m_tt_car_queue
        (t_id,
         client_id,
         org_id,
         warehouse_id,
         queue_code,
         queue_name,
         is_cache,
         cache_qty,
         create_date,
         created_by,
         modify_ip,
         modify_date,
         last_modified_by,
         act_status)
      values
        (GETNTIID(),
         '',
         '',
         v_WAREHOUSE_ID,
         i_CacheQueueCode,
         i_CacheQueueName,
         1,
         i_CacheQTY,
         SYSDATE,
         'WMS',
         '',
         '',
         '',
         '1');
	 END IF; 
	 END IF; 
  o_success := 1;
  o_msg     := v_msg;
  RETURN;
	END IF;
	
		--更新
	IF i_Flag = 'U' THEN
	  IF i_QueueCode IS NOT NULL THEN
      UPDATE WMS_M_TT_CAR_QUEUE T
         SET T.QUEUE_NAME       = i_QueueName,
             T.LAST_MODIFIED_BY = 'WMS',
             T.MODIFY_DATE      = SYSDATE
       WHERE T.QUEUE_CODE = i_QueueCode;
		END IF;
    --CacheQueue
		IF i_CacheQueueCode IS NOT NULL THEN 
		 UPDATE WMS_M_TT_CAR_QUEUE T
         SET T.QUEUE_NAME       = i_CacheQueueName,
             T.CACHE_QTY        = i_CacheQTY,
             T.LAST_MODIFIED_BY = 'WMS',
             T.MODIFY_DATE      = SYSDATE
       WHERE T.QUEUE_CODE = i_QueueCode;
    END IF;
  o_success := 1;
  o_msg     := v_msg;
  RETURN;
	END IF;
	
 	--删除
	IF i_Flag = 'D' THEN
			DELETE FROM WMS_M_TT_CAR_QUEUE  
			 WHERE QUEUE_CODE = i_QueueCode;
					
		--CacheQueue
				DELETE FROM WMS_M_TT_CAR_QUEUE  
				WHERE QUEUE_CODE = i_CacheQueueCode;
				--update WMS_M_TT_CAR_QUEUE set 
    o_success := 1;
    o_msg     := v_msg;
  RETURN;
	END IF;

  COMMIT;
  v_msg := '同步TT队列主数据成功';
  m_add_log(i_warehouse_id   => v_WAREHOUSE_ID,
            i_log_text       => '同步TT队列主数据',
            i_log_text_long  => v_msg,
            i_common_name    => 'I_SYN_TT_CAR_QUEUE_M',
            i_critical_level => 0,
            i_type_code      => 'workflow_log',
            i_log_no         => v_log_no,
            i_parrent_log_no => '',
            i_user           => 'WMS');
  o_success := 1;
  o_msg     := v_msg;
EXCEPTION
  WHEN e_USEREXCEPTION THEN
    ROLLBACK;
    m_add_log(i_warehouse_id   => v_WAREHOUSE_ID,
              i_log_text       => '同步TT队列主数据',
              i_log_text_long  => v_msg,
              i_common_name    => 'I_SYN_TT_CAR_QUEUE_M',
              i_critical_level => 0,
              i_type_code      => 'workflow_log',
              i_log_no         => v_log_no,
              i_parrent_log_no => '',
              i_user           => 'WMS');
    o_success := 0;
    o_msg     := v_msg;
  WHEN OTHERS THEN
    ROLLBACK;
    v_msg := SQLERRM;
    m_add_log(i_warehouse_id   => v_WAREHOUSE_ID,
              i_log_text       => '同步TT队列主数据',
              i_log_text_long  => v_msg,
              i_common_name    => 'I_SYN_TT_CAR_QUEUE_M',
              i_critical_level => 0,
              i_type_code      => 'workflow_log',
              i_log_no         => v_log_no,
              i_parrent_log_no => '',
              i_user           => 'WMS');
    o_success := 0;
    o_msg     := v_msg;
end I_SYN_TT_CAR_QUEUE_M;
